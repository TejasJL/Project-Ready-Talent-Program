public class ArchivePatientHistoryBatch implements Database.Batchable<SObject> {
    
    // Query to select patient records with appointment dates older than 1 year
    public Database.QueryLocator start(Database.BatchableContext bc) {
        String query = 'SELECT Id, Doctor_Name__c, Name, Appointment_Date__c ' + 
                       'FROM Patient__c WHERE Appointment_Date__c < :DateTime.now().addYears(-1)';
        return Database.getQueryLocator(query);
    }

    // Process each batch of patient records
    public void execute(Database.BatchableContext bc, List<Patient__c> patientList) {
        List<Archived_Patient_History__c> archiveList = new List<Archived_Patient_History__c>();

        for (Patient__c patient : patientList) {
            // Create a new archived record
            Archived_Patient_History__c archived = new Archived_Patient_History__c();
            archived.Doctor_Name__c = patient.Doctor_Name__c;
            archived.Patient_Name__c = patient.Name;
            archived.Appointment_Date__c = patient.Appointment_Date__c;  // Date/Time to Date/Time
            archived.Archived_Date__c = System.now();  // Current date and time (Date/Time)

            // Add to archive list
            archiveList.add(archived);
        }
        
        // Insert new archived records
        insert archiveList;

        // Optionally, delete old records from the Patient__c object
        delete patientList;
    }

    // Finish method 
    public void finish(Database.BatchableContext bc) {
        System.debug('Archiving completed successfully.');
    }
}
